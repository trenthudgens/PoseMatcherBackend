import poseviz

import numpy as np
import cameralib

import multiprocessing

if __name__ == '__main__':
    multiprocessing.freeze_support()

    # Get the Python code from the request body
    # code = request.data.decode('utf-8')

    boxes1 = [[389.92864990234375, 91.395751953125, 314.0084228515625, 553.6902465820312, 0.9752058386802673]]
    poses3d1 = [[[-152.37403869628906, -198.03408813476562, 2981.69873046875], [-64.11166381835938, -154.12896728515625, 2992.5009765625], [-203.8190460205078, -147.40121459960938, 3044.52490234375], [-161.03530883789062, -283.52606201171875, 2941.370361328125], [-74.84883117675781, 23.32480812072754, 2722.176513671875], [-401.4239196777344, 110.40135192871094, 2840.915283203125], [-220.47256469726562, -288.631591796875, 2816.407958984375], [-19.005626678466797, 438.31768798828125, 2886.00732421875], [-246.7926788330078, 425.19482421875, 2950.734130859375], [-242.8381805419922, -261.18829345703125, 2766.85595703125], [-20.9880313873291, 512.843994140625, 2804.6396484375], [-324.39215087890625, 510.2901916503906, 2897.265869140625], [-331.8981628417969, -298.92767333984375, 2570.907958984375], [-212.649658203125, -295.79852294921875, 2629.11865234375], [-374.7069396972656, -290.8524169921875, 2693.61279296875], [-357.62884521484375, -271.7416687011719, 2503.72802734375], [-125.0746841430664, -232.325927734375, 2569.260498046875], [-474.216796875, -227.1268310546875, 2708.55126953125], [18.57621955871582, -22.323755264282227, 2646.679443359375], [-446.484375, -14.5556001663208, 2864.048095703125], [49.337806701660156, 251.0520477294922, 2658.7373046875], [-456.21612548828125, 219.1435089111328, 2855.31396484375], [55.457763671875, 316.00506591796875, 2665.684814453125], [-463.19073486328125, 271.5249938964844, 2848.88330078125]]]
    # hard coded example pose 2

    joint_names = ['pelv', 'lhip', 'rhip', 'spi1', 'lkne', 'rkne', 'spi2', 'lank', 'rank', 'spi3', 'ltoe', 'rtoe', 'neck', 'lcla', 'rcla', 'head', 'lsho', 'rsho', 'lelb', 'relb', 'lwri', 'rwri', 'lhan', 'rhan']
    joint_edges = [[1, 4], [1, 0], [2, 5], [2, 0], [3, 6], [3, 0], [4, 7], [5, 8], [6, 9], 
                [7, 10], [8, 11], [9, 12], [12, 13], [12, 14], [12, 15], [13, 16], [14, 17], 
                [16, 18], [17, 19], [18, 20], [19, 21], [20, 22], [21, 23]]

    viz = poseviz.PoseViz(joint_names, joint_edges, )

    frame = np.zeros([720, 1280, 3], np.uint8)


    # Update the visualization
    viz.update(
        frame=frame,
        boxes=np.array(boxes1, np.float32),
        poses=np.array(poses3d1, np.float32),
        camera=cameralib.Camera.from_fov(55, frame.shape[:2]))


# from flask import Flask, request

# app = Flask(__name__)

# # Define a route for your microservice
# @app.route('/run', methods=['POST'])
# def run_code():
#     # Get the Python code from the request body
#     # code = request.data.decode('utf-8')

#     boxes1 = [[389.92864990234375, 91.395751953125, 314.0084228515625, 553.6902465820312, 0.9752058386802673]]
#     poses3d1 = [[[-152.37403869628906, -198.03408813476562, 2981.69873046875], [-64.11166381835938, -154.12896728515625, 2992.5009765625], [-203.8190460205078, -147.40121459960938, 3044.52490234375], [-161.03530883789062, -283.52606201171875, 2941.370361328125], [-74.84883117675781, 23.32480812072754, 2722.176513671875], [-401.4239196777344, 110.40135192871094, 2840.915283203125], [-220.47256469726562, -288.631591796875, 2816.407958984375], [-19.005626678466797, 438.31768798828125, 2886.00732421875], [-246.7926788330078, 425.19482421875, 2950.734130859375], [-242.8381805419922, -261.18829345703125, 2766.85595703125], [-20.9880313873291, 512.843994140625, 2804.6396484375], [-324.39215087890625, 510.2901916503906, 2897.265869140625], [-331.8981628417969, -298.92767333984375, 2570.907958984375], [-212.649658203125, -295.79852294921875, 2629.11865234375], [-374.7069396972656, -290.8524169921875, 2693.61279296875], [-357.62884521484375, -271.7416687011719, 2503.72802734375], [-125.0746841430664, -232.325927734375, 2569.260498046875], [-474.216796875, -227.1268310546875, 2708.55126953125], [18.57621955871582, -22.323755264282227, 2646.679443359375], [-446.484375, -14.5556001663208, 2864.048095703125], [49.337806701660156, 251.0520477294922, 2658.7373046875], [-456.21612548828125, 219.1435089111328, 2855.31396484375], [55.457763671875, 316.00506591796875, 2665.684814453125], [-463.19073486328125, 271.5249938964844, 2848.88330078125]]]
#     # hard coded example pose 2

#     joint_names = ['pelv', 'lhip', 'rhip', 'spi1', 'lkne', 'rkne', 'spi2', 'lank', 'rank', 'spi3', 'ltoe', 'rtoe', 'neck', 'lcla', 'rcla', 'head', 'lsho', 'rsho', 'lelb', 'relb', 'lwri', 'rwri', 'lhan', 'rhan']
#     joint_edges = [[1, 4], [1, 0], [2, 5], [2, 0], [3, 6], [3, 0], [4, 7], [5, 8], [6, 9], 
#                 [7, 10], [8, 11], [9, 12], [12, 13], [12, 14], [12, 15], [13, 16], [14, 17], 
#                 [16, 18], [17, 19], [18, 20], [19, 21], [20, 22], [21, 23]]

#     viz = poseviz.PoseViz(joint_names, joint_edges, )

#     frame = np.zeros([720, 1280, 3], np.uint8)

#     # Update the visualization
#     viz.update(
#         frame=frame,
#         boxes=np.array(boxes1, np.float32),
#         poses=np.array(poses3d1, np.float32),
#         camera=cameralib.Camera.from_fov(55, frame.shape[:2]))
    
#     viz.new_sequence_output("out.png", fps=1)
#     viz.finalize_sequence_output()

# if __name__ == '__main__':
#     app.run(host='localhost', port=5069)
#     print(f'Server running on http://localhost:5069')
